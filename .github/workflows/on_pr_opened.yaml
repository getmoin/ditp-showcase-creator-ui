name: PR Build and Deploy UI

on:
  pull_request:
    branches:
      - main
      - develop
    paths:
      - "src/**"
      - "public/**"
      - "docker/**"
      - "charts/**"
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  ready:
    name: "Check if PR is ready for review"
    runs-on: ubuntu-latest
    outputs:
      deploy: ${{ steps.ready_for_review.outputs.true_false }}
      build: ${{ steps.ready_for_review.outputs.owner_true_false }}
    steps:
      - id: ready_for_review
        run: |
          echo "true_false=${{ toJSON(github.event.pull_request.draft != true && github.repository_owner == 'getmoin') }}" >> $GITHUB_OUTPUT #should change to bcgov
          echo "owner_true_false=${{ toJSON(github.repository_owner == 'getmoin') }}" >> $GITHUB_OUTPUT

  test_showcase_ui:
    name: "Test Showcase UI"
    needs: ready
    if: ${{ always() && fromJSON(needs.ready.outputs.deploy) == true }}
    uses: ./.github/workflows/test.yaml
    with:
      package_name: "showcase-ui"
          
  build_showcase_ui:
    name: "Build Showcase UI"
    runs-on: ubuntu-latest
    needs:
      - ready
      - test_showcase_ui
    if: ${{ always() && fromJSON(needs.ready.outputs.deploy) == true }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Build UI Image
        uses: ./.github/actions/build_docker
        id: builder
        with:
          context: "."
          dockerfile: "./docker/Dockerfile"
          image_name: ${{ github.repository_owner}}/ditp-showcase-creator-ui
          registry: ghcr.io
          registry_username: ${{ github.repository_owner}}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          build-args: |
            NEXT_TYPESCRIPT_CHECK=0
    outputs:
      image_tag: ${{ steps.builder.outputs.image_tag }}

  image-scan:
    name: "Image Scan - Showcase UI"
    needs: [build_showcase_ui, ready]
    runs-on: ubuntu-latest
    if: ${{ always() && fromJSON(needs.ready.outputs.deploy) == true && !(contains(needs.*.result, 'failure')) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Scan UI Docker Image
        uses: ./.github/actions/trivy-scan
        with:
          scan-type: 'image'
          scan-ref: 'ghcr.io/${{ github.repository_owner }}/ditp-showcase-creator-ui:${{ needs.build_showcase_ui.outputs.image_tag }}'
          scan-title: 'Docker Image Scan Results for ditp-showcase-creator-ui'
  
  deploy:
    name: "Deploy PR Environment - UI"
    environment: development
    runs-on: ubuntu-latest
    needs:
      - ready
      - build_showcase_ui
    if: ${{ always() && fromJSON(needs.ready.outputs.deploy) == true && !(contains(needs.*.result, 'failure')) }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install OpenShift CLI tools
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.14"

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          certificate_authority_data: ${{ secrets.OPENSHIFT_CA_CRT }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}

      - name: Deploy PR Environment with Helm
        run: |
          cd charts/showcase-ui

          # Deploy with Helm
          helm dependency update
          helm upgrade --install pr-${{ github.event.number }}-showcase-ui --namespace ${{ secrets.OPENSHIFT_NAMESPACE }} -f ./values.yaml --set ui.image.tag=${{ needs.build_showcase_ui.outputs.image_tag }} . --wait

      - name: Restart PR Deployments
        run: |
          oc rollout restart deployment/pr-${{ github.event.number }}-showcase-ui-showcase-ui

  deploymenturls:
    name: PR Deployment URLs comment
    runs-on: ubuntu-latest
    needs:
      - deploy
    if: ${{ always() && fromJSON(needs.ready.outputs.deploy) == true && !(contains(needs.*.result, 'failure')) }}
    steps:
      - uses: actions/checkout@v4

      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          comment-author: "github-actions[bot]"
          body-includes: PR Deployment URLs ready for review.

      - name: Create comment
        if: steps.fc.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.number }}
          body: |
            | Deployment | Resource | Location |
            | --- | --- | --- |
            | Showcase UI | | https://pr-${{ github.event.number }}-showcase-ui-${{ secrets.OPENSHIFT_PROJECT }}-${{ secrets.OPENSHIFT_ROUTE_SUFFIX }}/ |

            PR Deployment URLs ready for review.