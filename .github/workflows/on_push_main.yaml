name: Build, Push and Deploy UI

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
    paths:
      - "src/**"
      - "public/**"
      - "docker/**"
      - "charts/**"

jobs:
  test_showcase_ui:
    name: "Test Showcase UI"
    uses: ./.github/workflows/test.yaml
    with:
      package_name: "showcase-ui"
  
  build_showcase_ui:
    name: "Build Showcase UI"
    needs: test_showcase_ui
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Build UI Image
        uses: ./.github/actions/build_docker
        id: builder
        with:
          context: "."
          dockerfile: "./docker/Dockerfile"
          image_name: ${{ github.repository_owner}}/ditp-showcase-creator-ui
          registry: ghcr.io
          registry_username: ${{ github.repository_owner}}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          build-args: |
            NEXT_TYPESCRIPT_CHECK=0
    outputs:
      image_tag: ${{ steps.builder.outputs.image_tag }}

  image-scan:
    name: "Image Scan - Showcase UI"
    needs: build_showcase_ui
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Scan UI Docker Image
        uses: ./.github/actions/trivy-scan
        with:
          scan-type: 'image'
          scan-ref: 'ghcr.io/${{ github.repository_owner }}/ditp-showcase-creator-ui:${{ needs.build_showcase_ui.outputs.image_tag }}'
          scan-title: 'Docker Image Scan Results for ditp-showcase-creator-ui'

  deploy_dev:
    name: Deploy to Development
    environment: development
    runs-on: ubuntu-latest
    needs:
      - build_showcase_ui
    if: ${{ contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) }}
    steps:
      - uses: actions/checkout@v4

      - name: Install OpenShift CLI tools
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.14"

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          certificate_authority_data: ${{ secrets.OPENSHIFT_CA_CRT }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
     
      - name: Deploy to OpenShift with Helm
        run: |
          cd charts/showcase-ui
          
          helm dependency update
          helm upgrade --install showcase-ui \
            --namespace ${{ secrets.OPENSHIFT_NAMESPACE }} -f ./values.yaml --set ui.image.tag=${{ needs.build_showcase_ui.outputs.image_tag }} . --wait
      
      - name: Restart Deployments
        run: |
          oc rollout restart deployment/showcase-ui-showcase-ui

  deploy_uat:
    name: Deploy to UAT
    environment: uat  # This creates a manual approval gate
    runs-on: ubuntu-latest
    needs: deploy_dev
    steps:
      - uses: actions/checkout@v4

      - name: Install OpenShift CLI tools
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.14"

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          certificate_authority_data: ${{ secrets.OPENSHIFT_CA_CRT }}
          namespace: ${{ secrets.OPENSHIFT_UAT_NAMESPACE }}
     
      - name: Deploy to OpenShift with Helm
        run: |
          cd charts/showcase-ui
          
          helm dependency update
          helm upgrade --install showcase-ui \
            --namespace ${{ secrets.OPENSHIFT_UAT_NAMESPACE }} -f ./values.yaml -f ./values-uat.yaml --set ui.image.tag=${{ needs.build_showcase_ui.outputs.image_tag }} . --wait
      
      - name: Restart Deployments
        run: |
          oc rollout restart deployment/showcase-ui-showcase-ui

  deploy_prod:
    name: Deploy to Production
    environment: production  # This creates a manual approval gate
    runs-on: ubuntu-latest
    needs: deploy_uat
    steps:
      - uses: actions/checkout@v4

      - name: Install OpenShift CLI tools
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.14"

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          certificate_authority_data: ${{ secrets.OPENSHIFT_CA_CRT }}
          namespace: ${{ secrets.OPENSHIFT_PROD_NAMESPACE }}
     
      - name: Deploy to OpenShift with Helm
        run: |
          cd charts/showcase-ui
          
          helm dependency update
          helm upgrade --install showcase-ui \
            --namespace ${{ secrets.OPENSHIFT_PROD_NAMESPACE }} -f ./values.yaml -f ./values-prod.yaml --set ui.image.tag=${{ needs.build_showcase_ui.outputs.image_tag }} . --wait
      
      - name: Restart Deployments
        run: |
          oc rollout restart deployment/showcase-ui-showcase-ui
